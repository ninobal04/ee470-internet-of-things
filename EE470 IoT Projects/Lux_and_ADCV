
#include <Arduino.h>

//-----------------------
// Title: Lux Reference and Output Voltage
// ------------ 
// Program Detail
//-------------
// Purpose: Print output voltage based on reference lux
// Inputs: Light
// Outputs: Lux Reference, Output Voltage, ADC Count
// Date: 09/29/2025
// Compiler: Platform IO
// Author: Antonino Balistreri
// Versions: 1.0
//
//-------------
// File Dependencies: Arduino.h
//-------------
// Main Program
// ------------


// Configuration
const float ADC_FULL_SCALE_V = 3.30f;   // NodeMCU A0 â‰ˆ 0..3.3 V -> 0..1023
const uint8_t AVG_SAMPLES    = 20;      // average this many ADC reads
const bool PRINT_HELP_EACH   = false;   // set true if you want prompts every time

int readADC_once() {
  delay(2);                
  return analogRead(A0);
}

// simple median-of-3
int readADC_med3() {
  int a = readADC_once(), b = readADC_once(), c = readADC_once();
  if ((a<=b && b<=c) || (c<=b && b<=a)) return b;
  if ((b<=a && a<=c) || (c<=a && a<=b)) return a;
  return c;
}

float readADC_avg(uint8_t n, float* adc_avg_out=nullptr) {
  long sum = 0;
  for (uint8_t i=0; i<n; ++i) sum += readADC_med3();
  float adc_avg = sum / (float)n;         // counts
  if (adc_avg_out) *adc_avg_out = adc_avg;
  return (adc_avg / 1023.0f) * ADC_FULL_SCALE_V;   // volts at A0
}

String lineBuf;

void prompt() {
  Serial.println();
  Serial.println("Enter phone lux value (e.g., 377) and press Enter to record a pair.");
  Serial.println("-> Output CSV: ref_lux,volts,adc_avg");
}

void setup() {
  Serial.begin(115200);
  delay(50);
  Serial.println("\n=== Light Sensor Calibration Capture ===");
  Serial.println("Keep phone sensor and LDR module side-by-side under steady light.");
  Serial.println("Type the phone's lux and press Enter to log a row.");
  Serial.println("Header:");
  Serial.println("ref_lux,volts,adc_avg");
  if (PRINT_HELP_EACH) prompt();
}

void loop() {
  while (Serial.available()) {
    char ch = Serial.read();
    if (ch == '\r') continue;
    if (ch == '\n') {
      if (lineBuf.length()) {
        float refLux = lineBuf.toFloat();
        float adcAvgCounts = 0.0f;
        float volts = readADC_avg(AVG_SAMPLES, &adcAvgCounts);

        // CSV row
        Serial.print(refLux, 2); Serial.print(",");
        Serial.print(volts, 4);  Serial.print(",");
        Serial.println(adcAvgCounts, 1);

        lineBuf = "";
        if (PRINT_HELP_EACH) prompt();
      } else {
        if (PRINT_HELP_EACH) prompt();
      }
    } else {
      if (lineBuf.length() < 32) lineBuf += ch;
    }
  }
}

